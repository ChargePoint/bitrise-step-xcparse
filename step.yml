#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  xcparse
summary: |
  Extract screenshots, attachments, code coverage, logs, & more from Xcode 11+ xcresult
description: |
  Extract screenshots, attachments, code coverage, logs, & more from Xcode 11+ xcresult
website: https://github.com/ChargePoint/bitrise-step-xcparse
source_code_url: https://github.com/ChargePoint/bitrise-step-xcparse
support_url: https://github.com/ChargePoint/bitrise-step-xcparse/issues
host_os_tags:
  - osx-10.10

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
project_type_tags:
  - ios
  - macos
  - cordova
  - ionic
  - react-native
  - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

is_requires_admin_user: true
is_always_run: false
is_skippable: false
run_if: ""

deps:
  check_only:
  - name: xcode
  brew:
  - name: git
  - name: wget
  - name: ChargePoint/xcparse/xcparse


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - xcresult_path: $BITRISE_XCRESULT_PATH
    opts:
      title: "xcresult path"
      description: |-
          A `.xcresult` path, relative to the working directory (if specified).
      is_required: true
      is_expand: true
  - extract_attachments: "yes"
    opts:
      title: Extract Attachments
      description: |-
        If enabled, the attachments within the xcresult will be extracted.
      value_options:
        - "yes"
        - "no"
  - extract_code_coverage: "yes"
    opts:
      title: Extract Code Coverage
      description: |-
        If enabled, the code coverage files within the xcresult will be extracted.
      value_options:
        - "yes"
        - "no"
  - extract_logs: "yes"
    opts:
      title: Extract Logs
      description: |-
        If enabled, the logs & diagnostics within the xcresult will be extracted.
      value_options:
        - "yes"
        - "no"
  - extract_screenshots: "yes"
    opts:
      title: Extract Screenshots
      description: |-
        If enabled, the screenshots within the xcresult will be extracted.
      value_options:
        - "yes"
        - "no"
  - export_to_deploy: "yes"
    opts:
      title: Export to BITRISE_DEPLOY_DIR
      description: |-
          If enabled, all generated output will be exported into the ```BITRISE_DEPLOY_DIR```.
      value_options:
        - "yes"
        - "no"
  - attachments_divide_by_model: "no"
    opts:
      category: Attachment Options
      title: Divide By Model?
      description: |-
          If enabled, divides attachments by model
      value_options:
        - "yes"
        - "no"
  - attachments_divide_by_os: "no"
    opts:
      category: Attachment Options
      title: Divide By OS?
      description: |-
          If enabled, divides attachments by OS
      value_options:
        - "yes"
        - "no"
  - attachments_divide_by_language: "no"
    opts:
      category: Attachment Options
      title: Divide By Language?
      description: |-
          If enabled, divides attachments by test language
      value_options:
        - "yes"
        - "no"
  - attachments_divide_by_region: "no"
    opts:
      category: Attachment Options
      title: Divide By Region?
      description: |-
          If enabled, divides attachments by test region
      value_options:
        - "yes"
        - "no"
  - attachments_divide_by_test_plan_config: "no"
    opts:
      category: Attachment Options
      title: Divide By Test Plan Configuration?
      description: |-
          If enabled, divides attachments by test plan configuration
      value_options:
        - "yes"
        - "no"
  - attachments_divide_by_test: "no"
    opts:
      category: Attachment Options
      title: Divide By Test?
      description: |-
          If enabled, divides attachments by test
      value_options:
        - "yes"
        - "no"
  - attachments_whitelist_activity_type: ""
    opts:
      category: Attachment Options
      title: Activity Type Whitelist
      description: |-
        Only extract attachments in the ```.xcresult``` whose activity type matches at least one of the provided activity type strings. If blank, all activity types are allowed.
        
        Activity types can be found using verbose logging.  Below are a listing of common ones:

        * ```com.apple.dt.xctest.activity-type.attachmentContainer```
        
          Placeholder activity that contains an attachment, may contain user created screenshot
        * ```com.apple.dt.xctest.activity-type.deletedAttachment```
        
          Deleted attachment placeholder activity
        * ```com.apple.dt.xctest.activity-type.internal```
        
          Internal test step, may have automatic screenshot to show test progression
        * ```com.apple.dt.xctest.activity-type.testAssertionFailure```
        
          Step where the test failed in an assertion, may have failure screenshot
        * ```com.apple.dt.xctest.activity-type.userCreated```
        
          User created screenshot/attachment

        **Note:** When an activity type string is provided which doesn't have a reverse-DNS style domain, it is assumed to be of ```com.apple.dt.xctest.activity-type.``` and the domain is automatically added.

        So ```userCreated attachmentContainer``` would be equivalent to ```com.apple.dt.xctest.activity-type.userCreated com.apple.dt.xctest.activity-type.attachmentContainer```
  - attachments_whitelist_test_status: ""
    opts:
      category: Attachment Options
      title: Test Status Whitelist
      description: |-
          Only extract attachments in the ```.xcresult``` tied to tests that have a status that matches at least one of the provided status strings. If blank, all test statuses are allowed.

          * ```Success```
          
            Passing tests only
          * ```Failure```
          
            Failing tests only
          * ```Success Failure```
          
            Passing or failing tests only


          Test status strings can be found by using verbose logging.
  - attachments_whitelist_uti: ""
    opts:
      category: Attachment Options
      title: UTI Whitelist
      description: |-
        Only extract attachments in the ```.xcresult``` that conform to at least one of the given UTIs. If left empty, all attachments, regardless of UTI conformance, are extracted.
        
        Common attachment UTIs in xcresults are:
        * ```public.image```
        
          Screenshots
        * ```public.plain-text```
        
          Test failure debug descriptions

        Read [this Apple documentation](https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html#//apple_ref/doc/uid/TP40009259-SW1) for a list of publicly documented UTIs.
  - screenshots_divide_by_model: "no"
    opts:
      category: Screenshot Options
      title: Divide By Model?
      description: |-
          If enabled, divides screenshots by model
      value_options:
        - "yes"
        - "no"
  - screenshots_divide_by_os: "no"
    opts:
      category: Screenshot Options
      title: Divide By OS?
      description: |-
          If enabled, divides screenshots by OS
      value_options:
        - "yes"
        - "no"
  - screenshots_divide_by_language: "no"
    opts:
      category: Screenshot Options
      title: Divide By Language?
      description: |-
          If enabled, divides screenshots by test language
      value_options:
        - "yes"
        - "no"
  - screenshots_divide_by_region: "no"
    opts:
      category: Screenshot Options
      title: Divide By Region?
      description: |-
          If enabled, divides screenshots by test region
      value_options:
        - "yes"
        - "no"
  - screenshots_divide_by_test_plan_config: "no"
    opts:
      category: Screenshot Options
      title: Divide By Test Plan Configuration?
      description: |-
          If enabled, divides screenshots by test plan configuration
      value_options:
        - "yes"
        - "no"
  - screenshots_divide_by_test: "no"
    opts:
      category: Screenshot Options
      title: Divide By Test?
      description: |-
          If enabled, divides screenshots by test
      value_options:
        - "yes"
        - "no"
  - screenshots_whitelist_activity_type: ""
    opts:
      category: Screenshot Options
      title: Activity Type Whitelist
      description: |-
        Only extract screenshots in the ```.xcresult``` whose activity type matches at least one of the provided activity type strings. If blank, all activity types are allowed.
        
        Activity types can be found using verbose logging.  Below are a listing of common ones:

        * ```com.apple.dt.xctest.activity-type.attachmentContainer```
        
          Placeholder activity that contains an attachment, may contain user created screenshot
        * ```com.apple.dt.xctest.activity-type.deletedAttachment```
        
          Deleted attachment placeholder activity
        * ```com.apple.dt.xctest.activity-type.internal```
        
          Internal test step, may have automatic screenshot to show test progression
        * ```com.apple.dt.xctest.activity-type.testAssertionFailure```
        
          Step where the test failed in an assertion, may have failure screenshot
        * ```com.apple.dt.xctest.activity-type.userCreated```
        
          User created screenshot/attachment

        **Note:** When an activity type string is provided which doesn't have a reverse-DNS style domain, it is assumed to be of ```com.apple.dt.xctest.activity-type.``` and the domain is automatically added.

        So ```userCreated attachmentContainer``` would be equivalent to ```com.apple.dt.xctest.activity-type.userCreated com.apple.dt.xctest.activity-type.attachmentContainer```
  - screenshots_whitelist_test_status: ""
    opts:
      category: Screenshot Options
      title: Test Status Whitelist
      description: |-
          Only extract screenshots in the ```.xcresult``` tied to tests that have a status that matches at least one of the provided status strings. If blank, all test statuses are allowed.

          * ```Success```
          
            Passing tests only
          * ```Failure```
          
            Failing tests only
          * ```Success Failure```
          
            Passing or failing tests only


          Test status strings can be found by using verbose logging.
  - verbose: "no"
    opts:
      category: Debug
      title: Enable verbose logging?
      description: |-
        You can enable verbose logging within xcparse to debug issues. All xcresulttool commands and output will be shown when used.
      value_options:
        - "yes"
        - "no"

outputs:
  - XCPARSE_ATTACHMENTS_PATH:
    opts:
        title: The full test attachments zip path
        description: |-
            This is the path of the test attachments zip.
  - XCPARSE_CODE_COVERAGE_PATH:
    opts:
        title: The full test code coverage zip path
        description: |-
            This is the path of the test code coverage zip.
  - XCPARSE_LOGS_PATH:
    opts:
        title: The full test logs zip path
        description: |-
            This is the path of the test logs zip.
  - XCPARSE_SCREENSHOTS_PATH:
    opts:
        title: The full test screenshots zip path
        description: |-
            This is the path of the test screenshots zip.
  - XCPARSE_VERSION:
    opts:
        title: xcparse version
        description: |-
            This is the version of xcparse used for extraction.
